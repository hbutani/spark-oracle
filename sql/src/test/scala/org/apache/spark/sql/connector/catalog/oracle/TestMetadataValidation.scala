/*
  Copyright (c) 2021, Oracle and/or its affiliates.

  This software is dual-licensed to you under the Universal Permissive License
  (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License
  2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose
  either license.

  If you elect to accept the software under the Apache License, Version 2.0,
  the following applies:

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

package org.apache.spark.sql.connector.catalog.oracle

import org.apache.spark.sql.connector.catalog.oracle.OracleMetadata.{OraIdentifier, OraTable}

// scalastyle:off line.size.limit
trait TestMetadataValidation { self: LoadMetadataCache =>

  val TPCDS_NS = Array("TPCDS")
  val SPARKTEST_NS = Array("SPARKTEST")

  val SHIP_MODE = OraIdentifier(TPCDS_NS, "SHIP_MODE")
  val ITEM = OraIdentifier(TPCDS_NS, "ITEM")
  val CALL_CENTER = OraIdentifier(TPCDS_NS, "CALL_CENTER")
  val CUSTOMER = OraIdentifier(TPCDS_NS, "CUSTOMER")
  val CUSTOMER_ADDRESS = OraIdentifier(TPCDS_NS, "CUSTOMER_ADDRESS")
  val WEB_PAGE = OraIdentifier(TPCDS_NS, "WEB_PAGE")
  val CUSTOMER_DEMOGRAPHICS = OraIdentifier(TPCDS_NS, "CUSTOMER_DEMOGRAPHICS")
  val CATALOG_RETURNS = OraIdentifier(TPCDS_NS, "CATALOG_RETURNS")
  val STORE_RETURNS = OraIdentifier(TPCDS_NS, "STORE_RETURNS")
  val INCOME_BAND = OraIdentifier(TPCDS_NS, "INCOME_BAND")
  val WEB_SITE = OraIdentifier(TPCDS_NS, "WEB_SITE")
  val WEB_SALES = OraIdentifier(TPCDS_NS, "WEB_SALES")
  val WEB_RETURNS = OraIdentifier(TPCDS_NS, "WEB_RETURNS")
  val STORE = OraIdentifier(TPCDS_NS, "STORE")
  val DATE_DIM = OraIdentifier(TPCDS_NS, "DATE_DIM")
  val CATALOG_PAGE = OraIdentifier(TPCDS_NS, "CATALOG_PAGE")
  val HOUSEHOLD_DEMOGRAPHICS = OraIdentifier(TPCDS_NS, "HOUSEHOLD_DEMOGRAPHICS")
  val REASON = OraIdentifier(TPCDS_NS, "REASON")
  val STORE_SALES = OraIdentifier(TPCDS_NS, "STORE_SALES")
  val WAREHOUSE = OraIdentifier(TPCDS_NS, "WAREHOUSE")
  val CATALOG_SALES = OraIdentifier(TPCDS_NS, "CATALOG_SALES")
  val PROMOTION = OraIdentifier(TPCDS_NS, "PROMOTION")
  val INVENTORY = OraIdentifier(TPCDS_NS, "INVENTORY")

  val SALES_RANGE_PARTITION = OraIdentifier(SPARKTEST_NS, "SALES_RANGE_PARTITION")
  val mixed_case_name = OraIdentifier(SPARKTEST_NS, "mixed_case_name")
  val COMP = OraIdentifier(SPARKTEST_NS, "COMP")
  val SALES_BY_REGION_UNKNOWN_VALUES =
    OraIdentifier(SPARKTEST_NS, "SALES_BY_REGION_UNKNOWN_VALUES")
  val MIXED_CASE_NAME = OraIdentifier(SPARKTEST_NS, "MIXED_CASE_NAME")
  val SALES_BY_REGION = OraIdentifier(SPARKTEST_NS, "SALES_BY_REGION")
  val SALES_BY_REGION_AND_CHANNEL = OraIdentifier(SPARKTEST_NS, "SALES_BY_REGION_AND_CHANNEL")
  val QUARTERLY_REGIONAL_SALES = OraIdentifier(SPARKTEST_NS, "QUARTERLY_REGIONAL_SALES")
  val HASH_PARTITION_TABLE = OraIdentifier(SPARKTEST_NS, "HASH_PARTITION_TABLE")
  val REGIONS = OraIdentifier(SPARKTEST_NS, "REGIONS")
  val TIME_DIM = OraIdentifier(SPARKTEST_NS, "TIME_DIM")
  val COUNTRIES2 = OraIdentifier(SPARKTEST_NS, "COUNTRIES2")
  val SPARK_TEST_T1 = OraIdentifier(SPARKTEST_NS, "SPARK_TEST_T1")

  lazy val know_foreign_keys = Map(
    COUNTRIES2 ->
      s"columns=[REGION_ID], referencedTable=(,), referencedColumns=[REGION_ID]")

  lazy val known_properties = Map(SPARK_TEST_T1 ->
    s"ACCESS_DRIVER_TYPE ORACLE_BIGDATA REJECT_LIMIT UNLIMITED DEFAULT_DIRECTORY DATA_PUMP_DIR LOCATION https://objectstorage.us-ashburn-1.oraclecloud.com/n/idlxex3qf8sf/b/SparkTest/o/t1.parquet ACCESS_PARAMETERS com.oracle.bigdata.credential.name=OS_EXT_OCI com.oracle.bigdata.fileformat=PARQUET")

  lazy val known_columns = Map(
    SALES_RANGE_PARTITION ->
      "PRODUCT_ID NUMBER(6) CUSTOMER_ID NUMBER CHANNEL_ID CHAR(1) PROMO_ID NUMBER(6) SALE_DATE DATE QUANTITY_SOLD NUMBER AMOUNT_SOLD NUMBER(10, 2)",
    SHIP_MODE ->
      s"SM_SHIP_MODE_SK NUMBER SM_SHIP_MODE_ID CHAR(16) SM_TYPE CHAR(30) SM_CODE CHAR(10) SM_CARRIER CHAR(20) SM_CONTRACT CHAR(20)",
    ITEM ->
      "I_ITEM_SK NUMBER I_ITEM_ID CHAR(16) I_REC_START_DATE DATE I_REC_END_DATE DATE I_ITEM_DESC VARCHAR(200) I_CURRENT_PRICE NUMBER I_WHOLESALE_COST NUMBER I_BRAND_ID NUMBER I_BRAND CHAR(50) I_CLASS_ID NUMBER I_CLASS CHAR(50) I_CATEGORY_ID NUMBER I_CATEGORY CHAR(50) I_MANUFACT_ID NUMBER I_MANUFACT CHAR(50) I_SIZE CHAR(20) I_FORMULATION CHAR(20) I_COLOR CHAR(20) I_UNITS CHAR(10) I_CONTAINER CHAR(10) I_MANAGER_ID NUMBER I_PRODUCT_NAME CHAR(50)",
    CALL_CENTER ->
      "CC_CALL_CENTER_SK NUMBER CC_CALL_CENTER_ID CHAR(16) CC_REC_START_DATE DATE CC_REC_END_DATE DATE CC_CLOSED_DATE_SK NUMBER CC_OPEN_DATE_SK NUMBER CC_NAME VARCHAR(50) CC_CLASS VARCHAR(50) CC_EMPLOYEES NUMBER CC_SQ_FT NUMBER CC_HOURS CHAR(20) CC_MANAGER VARCHAR(40) CC_MKT_ID NUMBER CC_MKT_CLASS CHAR(50) CC_MKT_DESC VARCHAR(100) CC_MARKET_MANAGER VARCHAR(40) CC_DIVISION NUMBER CC_DIVISION_NAME VARCHAR(50) CC_COMPANY NUMBER CC_COMPANY_NAME CHAR(50) CC_STREET_NUMBER CHAR(10) CC_STREET_NAME VARCHAR(60) CC_STREET_TYPE CHAR(15) CC_SUITE_NUMBER CHAR(10) CC_CITY VARCHAR(60) CC_COUNTY VARCHAR(30) CC_STATE CHAR(2) CC_ZIP CHAR(10) CC_COUNTRY VARCHAR(20) CC_GMT_OFFSET NUMBER(5, 2) CC_TAX_PERCENTAGE NUMBER(5, 2)",
    CUSTOMER_ADDRESS ->
      "CA_ADDRESS_SK NUMBER CA_ADDRESS_ID CHAR(16) CA_STREET_NUMBER CHAR(10) CA_STREET_NAME VARCHAR(60) CA_STREET_TYPE CHAR(15) CA_SUITE_NUMBER CHAR(10) CA_CITY VARCHAR(60) CA_COUNTY VARCHAR(30) CA_STATE CHAR(2) CA_ZIP CHAR(10) CA_COUNTRY VARCHAR(20) CA_GMT_OFFSET NUMBER(5, 2) CA_LOCATION_TYPE CHAR(20)",
    WEB_PAGE ->
      "WP_WEB_PAGE_SK NUMBER WP_WEB_PAGE_ID CHAR(16) WP_REC_START_DATE DATE WP_REC_END_DATE DATE WP_CREATION_DATE_SK NUMBER WP_ACCESS_DATE_SK NUMBER WP_AUTOGEN_FLAG CHAR(1) WP_CUSTOMER_SK NUMBER WP_URL VARCHAR(100) WP_TYPE CHAR(50) WP_CHAR_COUNT NUMBER WP_LINK_COUNT NUMBER WP_IMAGE_COUNT NUMBER WP_MAX_AD_COUNT NUMBER",
    CUSTOMER_DEMOGRAPHICS ->
      "CD_DEMO_SK NUMBER CD_GENDER CHAR(1) CD_MARITAL_STATUS CHAR(1) CD_EDUCATION_STATUS CHAR(20) CD_PURCHASE_ESTIMATE NUMBER CD_CREDIT_RATING CHAR(10) CD_DEP_COUNT NUMBER CD_DEP_EMPLOYED_COUNT NUMBER CD_DEP_COLLEGE_COUNT NUMBER",
    CATALOG_RETURNS ->
      "CR_RETURNED_DATE_SK NUMBER CR_RETURNED_TIME_SK NUMBER CR_ITEM_SK NUMBER CR_REFUNDED_CUSTOMER_SK NUMBER CR_REFUNDED_CDEMO_SK NUMBER CR_REFUNDED_HDEMO_SK NUMBER CR_REFUNDED_ADDR_SK NUMBER CR_RETURNING_CUSTOMER_SK NUMBER CR_RETURNING_CDEMO_SK NUMBER CR_RETURNING_HDEMO_SK NUMBER CR_RETURNING_ADDR_SK NUMBER CR_CALL_CENTER_SK NUMBER CR_CATALOG_PAGE_SK NUMBER CR_SHIP_MODE_SK NUMBER CR_WAREHOUSE_SK NUMBER CR_REASON_SK NUMBER CR_ORDER_NUMBER NUMBER CR_RETURN_QUANTITY NUMBER CR_RETURN_AMOUNT NUMBER CR_RETURN_TAX NUMBER CR_RETURN_AMT_INC_TAX NUMBER CR_FEE NUMBER CR_RETURN_SHIP_COST NUMBER CR_REFUNDED_CASH NUMBER CR_REVERSED_CHARGE NUMBER CR_STORE_CREDIT NUMBER CR_NET_LOSS NUMBER",
    STORE_RETURNS ->
      "SR_RETURNED_DATE_SK NUMBER SR_RETURN_TIME_SK NUMBER SR_ITEM_SK NUMBER SR_CUSTOMER_SK NUMBER SR_CDEMO_SK NUMBER SR_HDEMO_SK NUMBER SR_ADDR_SK NUMBER SR_STORE_SK NUMBER SR_REASON_SK NUMBER SR_TICKET_NUMBER NUMBER SR_RETURN_QUANTITY NUMBER SR_RETURN_AMT NUMBER SR_RETURN_TAX NUMBER SR_RETURN_AMT_INC_TAX NUMBER SR_FEE NUMBER SR_RETURN_SHIP_COST NUMBER SR_REFUNDED_CASH NUMBER SR_REVERSED_CHARGE NUMBER SR_STORE_CREDIT NUMBER SR_NET_LOSS NUMBER",
    INCOME_BAND ->
      "IB_INCOME_BAND_SK NUMBER IB_LOWER_BOUND NUMBER IB_UPPER_BOUND NUMBER",
    WEB_SITE ->
      "WEB_SITE_SK NUMBER WEB_SITE_ID CHAR(16) WEB_REC_START_DATE DATE WEB_REC_END_DATE DATE WEB_NAME VARCHAR(50) WEB_OPEN_DATE_SK NUMBER WEB_CLOSE_DATE_SK NUMBER WEB_CLASS VARCHAR(50) WEB_MANAGER VARCHAR(40) WEB_MKT_ID NUMBER WEB_MKT_CLASS VARCHAR(50) WEB_MKT_DESC VARCHAR(100) WEB_MARKET_MANAGER VARCHAR(40) WEB_COMPANY_ID NUMBER WEB_COMPANY_NAME CHAR(50) WEB_STREET_NUMBER CHAR(10) WEB_STREET_NAME VARCHAR(60) WEB_STREET_TYPE CHAR(15) WEB_SUITE_NUMBER CHAR(10) WEB_CITY VARCHAR(60) WEB_COUNTY VARCHAR(30) WEB_STATE CHAR(2) WEB_ZIP CHAR(10) WEB_COUNTRY VARCHAR(20) WEB_GMT_OFFSET NUMBER(5, 2) WEB_TAX_PERCENTAGE NUMBER(5, 2)",
    WEB_SALES ->
      "WS_SOLD_DATE_SK NUMBER WS_SOLD_TIME_SK NUMBER WS_SHIP_DATE_SK NUMBER WS_ITEM_SK NUMBER WS_BILL_CUSTOMER_SK NUMBER WS_BILL_CDEMO_SK NUMBER WS_BILL_HDEMO_SK NUMBER WS_BILL_ADDR_SK NUMBER WS_SHIP_CUSTOMER_SK NUMBER WS_SHIP_CDEMO_SK NUMBER WS_SHIP_HDEMO_SK NUMBER WS_SHIP_ADDR_SK NUMBER WS_WEB_PAGE_SK NUMBER WS_WEB_SITE_SK NUMBER WS_SHIP_MODE_SK NUMBER WS_WAREHOUSE_SK NUMBER WS_PROMO_SK NUMBER WS_ORDER_NUMBER NUMBER WS_QUANTITY NUMBER WS_WHOLESALE_COST NUMBER WS_LIST_PRICE NUMBER WS_SALES_PRICE NUMBER WS_EXT_DISCOUNT_AMT NUMBER WS_EXT_SALES_PRICE NUMBER WS_EXT_WHOLESALE_COST NUMBER WS_EXT_LIST_PRICE NUMBER WS_EXT_TAX NUMBER WS_COUPON_AMT NUMBER WS_EXT_SHIP_COST NUMBER WS_NET_PAID NUMBER WS_NET_PAID_INC_TAX NUMBER WS_NET_PAID_INC_SHIP NUMBER WS_NET_PAID_INC_SHIP_TAX NUMBER WS_NET_PROFIT NUMBER",
    WEB_RETURNS ->
      "WR_RETURNED_DATE_SK NUMBER WR_RETURNED_TIME_SK NUMBER WR_ITEM_SK NUMBER WR_REFUNDED_CUSTOMER_SK NUMBER WR_REFUNDED_CDEMO_SK NUMBER WR_REFUNDED_HDEMO_SK NUMBER WR_REFUNDED_ADDR_SK NUMBER WR_RETURNING_CUSTOMER_SK NUMBER WR_RETURNING_CDEMO_SK NUMBER WR_RETURNING_HDEMO_SK NUMBER WR_RETURNING_ADDR_SK NUMBER WR_WEB_PAGE_SK NUMBER WR_REASON_SK NUMBER WR_ORDER_NUMBER NUMBER WR_RETURN_QUANTITY NUMBER WR_RETURN_AMT NUMBER WR_RETURN_TAX NUMBER WR_RETURN_AMT_INC_TAX NUMBER WR_FEE NUMBER WR_RETURN_SHIP_COST NUMBER WR_REFUNDED_CASH NUMBER WR_REVERSED_CHARGE NUMBER WR_ACCOUNT_CREDIT NUMBER WR_NET_LOSS NUMBER",
    STORE ->
      "S_STORE_SK NUMBER S_STORE_ID CHAR(16) S_REC_START_DATE DATE S_REC_END_DATE DATE S_CLOSED_DATE_SK NUMBER S_STORE_NAME VARCHAR(50) S_NUMBER_EMPLOYEES NUMBER S_FLOOR_SPACE NUMBER S_HOURS CHAR(20) S_MANAGER VARCHAR(40) S_MARKET_ID NUMBER S_GEOGRAPHY_CLASS VARCHAR(100) S_MARKET_DESC VARCHAR(100) S_MARKET_MANAGER VARCHAR(40) S_DIVISION_ID NUMBER S_DIVISION_NAME VARCHAR(50) S_COMPANY_ID NUMBER S_COMPANY_NAME VARCHAR(50) S_STREET_NUMBER VARCHAR(10) S_STREET_NAME VARCHAR(60) S_STREET_TYPE CHAR(15) S_SUITE_NUMBER CHAR(10) S_CITY VARCHAR(60) S_COUNTY VARCHAR(30) S_STATE CHAR(2) S_ZIP CHAR(10) S_COUNTRY VARCHAR(20) S_GMT_OFFSET NUMBER(5, 2) S_TAX_PERCENTAGE NUMBER(5, 2)",
    DATE_DIM ->
      "D_DATE_SK NUMBER D_DATE_ID CHAR(16) D_DATE DATE D_MONTH_SEQ NUMBER D_WEEK_SEQ NUMBER D_QUARTER_SEQ NUMBER D_YEAR NUMBER D_DOW NUMBER D_MOY NUMBER D_DOM NUMBER D_QOY NUMBER D_FY_YEAR NUMBER D_FY_QUARTER_SEQ NUMBER D_FY_WEEK_SEQ NUMBER D_DAY_NAME CHAR(9) D_QUARTER_NAME CHAR(6) D_HOLIDAY CHAR(1) D_WEEKEND CHAR(1) D_FOLLOWING_HOLIDAY CHAR(1) D_FIRST_DOM NUMBER D_LAST_DOM NUMBER D_SAME_DAY_LY NUMBER D_SAME_DAY_LQ NUMBER D_CURRENT_DAY CHAR(1) D_CURRENT_WEEK CHAR(1) D_CURRENT_MONTH CHAR(1) D_CURRENT_QUARTER CHAR(1) D_CURRENT_YEAR CHAR(1)",
    CATALOG_PAGE ->
      "CP_CATALOG_PAGE_SK NUMBER CP_CATALOG_PAGE_ID CHAR(16) CP_START_DATE_SK NUMBER CP_END_DATE_SK NUMBER CP_DEPARTMENT VARCHAR(50) CP_CATALOG_NUMBER NUMBER CP_CATALOG_PAGE_NUMBER NUMBER CP_DESCRIPTION VARCHAR(100) CP_TYPE VARCHAR(100)",
    HOUSEHOLD_DEMOGRAPHICS ->
      "HD_DEMO_SK NUMBER HD_INCOME_BAND_SK NUMBER HD_BUY_POTENTIAL CHAR(15) HD_DEP_COUNT NUMBER HD_VEHICLE_COUNT NUMBER",
    REASON -> "R_REASON_SK NUMBER R_REASON_ID CHAR(16) R_REASON_DESC CHAR(100)",
    STORE_SALES ->
      "SS_SOLD_DATE_SK NUMBER SS_SOLD_TIME_SK NUMBER SS_ITEM_SK NUMBER SS_CUSTOMER_SK NUMBER SS_CDEMO_SK NUMBER SS_HDEMO_SK NUMBER SS_ADDR_SK NUMBER SS_STORE_SK NUMBER SS_PROMO_SK NUMBER SS_TICKET_NUMBER NUMBER SS_QUANTITY NUMBER SS_WHOLESALE_COST NUMBER SS_LIST_PRICE NUMBER SS_SALES_PRICE NUMBER SS_EXT_DISCOUNT_AMT NUMBER SS_EXT_SALES_PRICE NUMBER SS_EXT_WHOLESALE_COST NUMBER SS_EXT_LIST_PRICE NUMBER SS_EXT_TAX NUMBER SS_COUPON_AMT NUMBER SS_NET_PAID NUMBER SS_NET_PAID_INC_TAX NUMBER SS_NET_PROFIT NUMBER",
    WAREHOUSE ->
      "W_WAREHOUSE_SK NUMBER W_WAREHOUSE_ID CHAR(16) W_WAREHOUSE_NAME VARCHAR(20) W_WAREHOUSE_SQ_FT NUMBER W_STREET_NUMBER CHAR(10) W_STREET_NAME VARCHAR(60) W_STREET_TYPE CHAR(15) W_SUITE_NUMBER CHAR(10) W_CITY VARCHAR(60) W_COUNTY VARCHAR(30) W_STATE CHAR(2) W_ZIP CHAR(10) W_COUNTRY VARCHAR(20) W_GMT_OFFSET NUMBER(5, 2)",
    CATALOG_SALES ->
      "CS_SOLD_DATE_SK NUMBER CS_SOLD_TIME_SK NUMBER CS_SHIP_DATE_SK NUMBER CS_BILL_CUSTOMER_SK NUMBER CS_BILL_CDEMO_SK NUMBER CS_BILL_HDEMO_SK NUMBER CS_BILL_ADDR_SK NUMBER CS_SHIP_CUSTOMER_SK NUMBER CS_SHIP_CDEMO_SK NUMBER CS_SHIP_HDEMO_SK NUMBER CS_SHIP_ADDR_SK NUMBER CS_CALL_CENTER_SK NUMBER CS_CATALOG_PAGE_SK NUMBER CS_SHIP_MODE_SK NUMBER CS_WAREHOUSE_SK NUMBER CS_ITEM_SK NUMBER CS_PROMO_SK NUMBER CS_ORDER_NUMBER NUMBER CS_QUANTITY NUMBER CS_WHOLESALE_COST NUMBER CS_LIST_PRICE NUMBER CS_SALES_PRICE NUMBER CS_EXT_DISCOUNT_AMT NUMBER CS_EXT_SALES_PRICE NUMBER CS_EXT_WHOLESALE_COST NUMBER CS_EXT_LIST_PRICE NUMBER CS_EXT_TAX NUMBER CS_COUPON_AMT NUMBER CS_EXT_SHIP_COST NUMBER CS_NET_PAID NUMBER CS_NET_PAID_INC_TAX NUMBER CS_NET_PAID_INC_SHIP NUMBER CS_NET_PAID_INC_SHIP_TAX NUMBER CS_NET_PROFIT NUMBER",
    PROMOTION ->
      "P_PROMO_SK NUMBER P_PROMO_ID CHAR(16) P_START_DATE_SK NUMBER P_END_DATE_SK NUMBER P_ITEM_SK NUMBER P_COST NUMBER(15, 2) P_RESPONSE_TARGET NUMBER P_PROMO_NAME CHAR(50) P_CHANNEL_DMAIL CHAR(1) P_CHANNEL_EMAIL CHAR(1) P_CHANNEL_CATALOG CHAR(1) P_CHANNEL_TV CHAR(1) P_CHANNEL_RADIO CHAR(1) P_CHANNEL_PRESS CHAR(1) P_CHANNEL_EVENT CHAR(1) P_CHANNEL_DEMO CHAR(1) P_CHANNEL_DETAILS VARCHAR(100) P_PURPOSE CHAR(15) P_DISCOUNT_ACTIVE CHAR(1)",
    INVENTORY ->
      "INV_DATE_SK NUMBER INV_ITEM_SK NUMBER INV_WAREHOUSE_SK NUMBER INV_QUANTITY_ON_HAND NUMBER",
    mixed_case_name -> "NAME VARCHAR(100)",
    COMP ->
      "TSTAMP TIMESTAMP(6) EMPNO NUMBER(10) ENAME VARCHAR(10) DEPTNO VARCHAR(10)",
    SALES_BY_REGION_UNKNOWN_VALUES ->
      "DEPT_NUMBER NUMBER DEPT_NAME VARCHAR(20) QUARTERLY_SALES NUMBER(10, 2) STATE VARCHAR(2)",
    MIXED_CASE_NAME -> "NAME VARCHAR(100)",
    SALES_BY_REGION ->
      "ITEM_ID NUMBER ITEM_QUANTITY NUMBER STORE_NAME VARCHAR(30) STATE_CODE VARCHAR(2) SALE_DATE DATE",
    SALES_BY_REGION_AND_CHANNEL ->
      "DEPT_NUMBER NUMBER DEPT_NAME VARCHAR(20) QUARTERLY_SALES NUMBER(10, 2) STATE VARCHAR(2) CHANNEL VARCHAR(1)",
    QUARTERLY_REGIONAL_SALES ->
      "PRODUCT_ID NUMBER(6) CUSTOMER_ID NUMBER CHANNEL_ID CHAR(1) PROMO_ID NUMBER(6) SALE_DATE DATE QUANTITY_SOLD NUMBER AMOUNT_SOLD NUMBER(10, 2) STORE_NAME VARCHAR(30) STATE_CODE VARCHAR(2)",
    HASH_PARTITION_TABLE -> "X NUMBER(10)",
    REGIONS -> "REGION_ID NUMBER REGION_NAME VARCHAR(25)",
    TIME_DIM ->
      "T_TIME_SK NUMBER T_TIME_ID CHAR(16) T_TIME NUMBER T_HOUR NUMBER T_MINUTE NUMBER T_SECOND NUMBER T_AM_PM CHAR(2) T_SHIFT CHAR(20) T_SUB_SHIFT CHAR(20) T_MEAL_TIME CHAR(20)",
    CUSTOMER ->
      "C_CUSTOMER_SK NUMBER C_CUSTOMER_ID CHAR(16) C_CURRENT_CDEMO_SK NUMBER C_CURRENT_HDEMO_SK NUMBER C_CURRENT_ADDR_SK NUMBER C_FIRST_SHIPTO_DATE_SK NUMBER C_FIRST_SALES_DATE_SK NUMBER C_SALUTATION CHAR(10) C_FIRST_NAME CHAR(20) C_LAST_NAME CHAR(30) C_PREFERRED_CUST_FLAG CHAR(1) C_BIRTH_DAY NUMBER C_BIRTH_MONTH NUMBER C_BIRTH_YEAR NUMBER C_BIRTH_COUNTRY VARCHAR(20) C_LOGIN CHAR(13) C_EMAIL_ADDRESS CHAR(50) C_LAST_REVIEW_DATE_SK NUMBER",
  )

  val known_part_columns = Map(
    CATALOG_RETURNS ->
      "Partition Scheme: type=RANGE, columns=[CR_RETURNED_DATE_SK]\n",
    STORE_RETURNS ->
      "Partition Scheme: type=RANGE, columns=[SR_RETURNED_DATE_SK]\n",
    WEB_SALES -> "Partition Scheme: type=RANGE, columns=[WS_SOLD_DATE_SK]\n",
    WEB_RETURNS ->
      "Partition Scheme: type=RANGE, columns=[WR_RETURNED_DATE_SK]\n",
    STORE_SALES ->
      "Partition Scheme: type=RANGE, columns=[SS_SOLD_DATE_SK]\n",
    CATALOG_SALES ->
      "Partition Scheme: type=RANGE, columns=[CS_SOLD_DATE_SK]\n",
    INVENTORY -> "Partition Scheme: type=RANGE, columns=[INV_DATE_SK]\n",
    COMP -> """Partition Scheme: type=RANGE, columns=[TSTAMP]
              |Sub-Partition Scheme: type=LIST, columns=[DEPTNO]
              |""".stripMargin,
    SALES_RANGE_PARTITION ->
      "Partition Scheme: type=RANGE, columns=[SALE_DATE]\n",
    SALES_BY_REGION_UNKNOWN_VALUES ->
      "Partition Scheme: type=LIST, columns=[STATE]\n",
    SALES_BY_REGION ->
      "Partition Scheme: type=LIST, columns=[STATE_CODE]\n",
    SALES_BY_REGION_AND_CHANNEL ->
      "Partition Scheme: type=LIST, columns=[STATE,CHANNEL]\n",
    QUARTERLY_REGIONAL_SALES ->
      """Partition Scheme: type=RANGE, columns=[SALE_DATE]
        |Sub-Partition Scheme: type=LIST, columns=[STATE_CODE]
        |""".stripMargin,
    HASH_PARTITION_TABLE -> "Partition Scheme: type=HASH, columns=[X]\n",
  )

  private def checkEqual(
      tblId: OraIdentifier,
      component: String,
      knownVal: String,
      observedVal: String): Unit = {

    if (knownVal != observedVal) {
      println("oops")
    }

    assert(
      knownVal == observedVal,
      s"""${component} mismatch for ${tblId}:
            Known Value    : ${knownVal}
            Observed Value : ${observedVal}
        """.stripMargin)
  }

  def validate(tbl: OraTable): Unit = {
    val tblId = OraIdentifier(Array(tbl.schema), tbl.name)

    for (cols <- known_columns.get(tblId)) {
      val tblCols = tbl.columns.map(c => s"${c.name} ${c.dataType.oraTypeString}").mkString(" ")
      checkEqual(tblId, "Columns", cols, tblCols)
    }

    for (knownPCols <- known_part_columns.get(tblId)) {
      val pScheme = tbl.partitionScheme.get
      val bldr = new StringBuilder
      pScheme.dump(bldr)
      checkEqual(tblId, "Partition Columns", knownPCols, bldr.toString())
    }

    // TODO: foreign_keys, primary_keys, properties
//    for (fkKeys <- tbl.foreignKeys) {
//      val knownFKeys = know_foreign_keys(tblId)
//      val bldr = new StringBuilder
//    }
  }
}
